实现方式: TransactionAttributeType.REQUOIRES_NEW

需要使用注入的方式才会使得事务生效，即使对象调用this.内部的方法也是如此，实例如下
http://www.28im.com/java/a4181496.html


JAVA多线程
http://blog.csdn.net/vking_wang/article/details/9952063
http://www.cnblogs.com/mengheng/p/3491304.html

JSF自定义转换器(String页面请求参数和任意对象之间的转换)
http://whoosh.iteye.com/blog/1289468

java获取自定义包下的所有类
http://guoliangqi.iteye.com/blog/644876
http://www.tuicool.com/articles/y2eqem
http://blog.csdn.net/jdzms23/article/details/17550119        // spring
http://blog.csdn.net/wangpeng047/article/details/8206427     // 自写

/**
 *分析得不错，算是解决了一大半，但还是有问题的，在某些WEB服务器中运行WAR包时，它不会像TOMCAT一样将WAR包解压为目录的，
 *如JBOSS7，它是使用了一种叫VFS的协议，所以你使用url.getProtocol()获取到的有可能即不是"file"也不是"jar"。
 *
 */



/*********** 从JAVA客户端访问Redis示例(入门) ***********/

http://blog.csdn.net/kkdelta/article/details/7217761
//连接池的版本
http://blog.sina.com.cn/s/blog_6ab16ed90101pc9w.html
http://blog.csdn.net/java2000_wl/article/details/8531702


/****************** Linux Redis 安装 *******************/

下载Redis源码压缩包
linux使用mark编译
运行redis-server
新建窗口运行redis-cli // set name yinaijie // get name

// root权限
设置自启动 /etc/rc.local
设置redis运行参数 redis.conf //且复制到/etc/下  ##redis的默认配置文件中daemonize参数的值为no，代表为非后台启动
设置iptable配置文件使redis可以过防火墙 /etc/sysconfig/iptables



/****************** WebContextStart *******************/

Listener的初始化最早，Filter次之。他俩的初始化都是在容器启动完成之前初始化的。 
Servlet没有初始化，原因是没有匹配的请求进来。 
如果想要servlet自动初始化，需要在指定的servlet中配置<load-on-startup>参数，没有此标签，默认启动时servlet不进行初始化。 

初始化的顺序跟Listener、Filter、Servlet在web.xml中的顺序无关 
而多个Filter或多个Servlet的时候，谁的mapping在前面，谁先初始化。 
如果web.xml中配置了<context-param>，初始化顺序： 
context-param > Listener > Filter > Servlet


/*******************************************************
 * 
 * windows安装TortoiseGit详细使用教程【基础篇】 
 *
 * TortoiseGit自动记住密码
 *
 ********************************************************/

   http://www.mamicode.com/info-detail-423481.html

   http://my.oschina.net/jjyuangu/blog/232798?p=1


//==========================================================
Servlet doPost方法 阻塞疑问
Servlet doPost方法 阻塞疑问
http://www.oschina.net/question/147822_91029?fromerr=9jEBB3On


//=====================================================
Spring AOP实现原理
http://wiki.jikexueyuan.com/project/ssh-noob-learning/dynamic-proxy.html


Maven管理的jar没有发布到WEB-INF/lib下的解决方案
http://blog.163.com/ffwangkun@126/blog/static/16860101520133102430521/

创建一个maven工程然后修改为web项目
http://www.cnblogs.com/luxh/archive/2012/11/14/2763139.html